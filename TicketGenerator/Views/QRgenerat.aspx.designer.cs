//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//namespace Shatam_QR_Patrol.Views {


//  public partial class QRgenerat {

//    protected System.Web.UI.HtmlControls.HtmlForm form1;

//    protected System.Web.UI.WebControls.TextBox qrDataTextBox;

//    protected System.Web.UI.WebControls.Button generateButton;

//    protected System.Web.UI.HtmlControls.HtmlGenericControl qrCodeContainer;
//  }
//}

//using System;
//using System.Drawing;
//using System.Web.UI;
//using System.Web.UI.WebControls;
//using ZXing;
//using ZXing.QrCode;
//using System.IO;

//namespace Shatam_QR_Patrol.Views
//{


//    public partial class QRgenerat : System.Web.UI.Page
//    {
//        protected System.Web.UI.HtmlControls.HtmlForm form1;

//        protected System.Web.UI.WebControls.TextBox qrDataTextBox;

//        protected System.Web.UI.WebControls.Button generateButton;

//        protected System.Web.UI.HtmlControls.HtmlGenericControl qrCodeContainer;
//        protected void generateButton_Click(object sender, EventArgs e)
//        {
//            string dataToEncode = qrDataTextBox.Text;

//            if (string.IsNullOrEmpty(dataToEncode))
//            {
//                // Display error message
//                qrCodeContainer.InnerHtml = "<p>Please enter data to encode.</p>";
//                return;
//            }

//            try
//            {
//                // Generate QR code with ZXing.Net
//                BarcodeWriter writer = new BarcodeWriter();
//                //writer.Format = BarcodeFormat.QR_Code;
//                writer.Format = BarcodeFormat.QRCode; // Replace QR_Code with just QRCode
//                writer.Options.ErrorCorrectionLevel = ErrorCorrectionLevel.H; // Adjust as needed
//                Bitmap qrCodeImage = writer.Write(dataToEncode);

//                // Convert image to byte array for browser display
//                using (MemoryStream ms = new MemoryStream())
//                {
//                    qrCodeImage.Save(ms, ImageFormat.Png);
//                    byte[] imageBytes = ms.ToArray();

//                    // Display generated QR code image
//                    qrCodeContainer.InnerHtml = "<img src=\"data:image/png;base64," + Convert.ToBase64String(imageBytes) + "\" alt=\"QR Code\" />";
//                }
//            }
//            catch (Exception ex)
//            {
//                // Handle QR code generation error
//                qrCodeContainer.InnerHtml = "<p>Error generating QR code: " + ex.Message + "</p>";
//            }
//        }
//    }
//}
using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Web.UI;
using System.Web.UI.WebControls;
using ZXing;
using ZXing.QrCode;
using ZXing.QrCode.Internal;

namespace TicketGenerator.Views
{
    public partial class QRgenerat : System.Web.UI.Page
    {
        protected System.Web.UI.HtmlControls.HtmlForm form1;
        protected System.Web.UI.WebControls.TextBox qrDataTextBox;
        protected System.Web.UI.WebControls.Button generateButton;
        protected System.Web.UI.HtmlControls.HtmlGenericControl qrCodeContainer;

        protected void generateButton_Click(object sender, EventArgs e)
        {
            string dataToEncode = qrDataTextBox.Text;

            if (string.IsNullOrEmpty(dataToEncode))
            {
                // Display error message
                qrCodeContainer.InnerHtml = "<p>Please enter data to encode.</p>";
                return;
            }

            try
            {
                // Generate QR code with ZXing.Net
                BarcodeWriter writer = new BarcodeWriter();
                writer.Format = BarcodeFormat.QR_CODE;

                writer.Options = new QrCodeEncodingOptions
                {
                    ErrorCorrection = ErrorCorrectionLevel.H,
                    // You can add more options if needed
                };

                Bitmap qrCodeImage = writer.Write(dataToEncode);

                // Convert image to byte array for browser display
                using (MemoryStream ms = new MemoryStream())
                {
                    qrCodeImage.Save(ms, ImageFormat.Png);
                    byte[] imageBytes = ms.ToArray();

                    // Display generated QR code image
                    qrCodeContainer.InnerHtml = "<img style=\"height: 200px;\" src=\"data:image/png;base64," + Convert.ToBase64String(imageBytes) + "\" alt=\"QR Code\" />";
                }
            }
            catch (Exception ex)
            {
                // Handle QR code generation error
                qrCodeContainer.InnerHtml = "<p>Error generating QR code: " + ex.Message + "</p>";
            }
        }
    }
}
